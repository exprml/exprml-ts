"use strict";
// @generated by protoc-gen-es v2.2.0 with parameter "target=ts,import_extension=js"
// @generated from file exprml/v1/expr.proto (package exprml.v1, syntax proto3)
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpVariadic_OpSchema = exports.OpVariadic_Op = exports.OpVariadicSchema = exports.OpBinary_OpSchema = exports.OpBinary_Op = exports.OpBinarySchema = exports.OpUnary_OpSchema = exports.OpUnary_Op = exports.OpUnarySchema = exports.Cases_CaseSchema = exports.CasesSchema = exports.CallSchema = exports.ElemSchema = exports.IterSchema = exports.JsonSchema = exports.ArrSchema = exports.ObjSchema = exports.RefSchema = exports.ScalarSchema = exports.Eval_DefinitionSchema = exports.EvalSchema = exports.Expr_KindSchema = exports.Expr_Kind = exports.Expr_Path_PosSchema = exports.Expr_PathSchema = exports.ExprSchema = exports.file_exprml_v1_expr = void 0;
const codegenv1_1 = require("@bufbuild/protobuf/codegenv1");
const value_pb_js_1 = require("./value_pb.js");
/**
 * Describes the file exprml/v1/expr.proto.
 */
exports.file_exprml_v1_expr = (0, codegenv1_1.fileDesc)("ChRleHBybWwvdjEvZXhwci5wcm90bxIJZXhwcm1sLnYxIp0GCgRFeHByEiIKBHBhdGgYASABKAsyFC5leHBybWwudjEuRXhwci5QYXRoEh8KBXZhbHVlGAIgASgLMhAuZXhwcm1sLnYxLlZhbHVlEiIKBGtpbmQYAyABKA4yFC5leHBybWwudjEuRXhwci5LaW5kEh0KBGV2YWwYCiABKAsyDy5leHBybWwudjEuRXZhbBIhCgZzY2FsYXIYCyABKAsyES5leHBybWwudjEuU2NhbGFyEhsKA3JlZhgMIAEoCzIOLmV4cHJtbC52MS5SZWYSGwoDb2JqGA0gASgLMg4uZXhwcm1sLnYxLk9iahIbCgNhcnIYDiABKAsyDi5leHBybWwudjEuQXJyEh0KBGpzb24YDyABKAsyDy5leHBybWwudjEuSnNvbhIdCgRpdGVyGBAgASgLMg8uZXhwcm1sLnYxLkl0ZXISHQoEZWxlbRgRIAEoCzIPLmV4cHJtbC52MS5FbGVtEh0KBGNhbGwYEiABKAsyDy5leHBybWwudjEuQ2FsbBIfCgVjYXNlcxgTIAEoCzIQLmV4cHJtbC52MS5DYXNlcxIkCghvcF91bmFyeRgUIAEoCzISLmV4cHJtbC52MS5PcFVuYXJ5EiYKCW9wX2JpbmFyeRgVIAEoCzITLmV4cHJtbC52MS5PcEJpbmFyeRIqCgtvcF92YXJpYWRpYxgWIAEoCzIVLmV4cHJtbC52MS5PcFZhcmlhZGljGlAKBFBhdGgSJQoDcG9zGAEgAygLMhguZXhwcm1sLnYxLkV4cHIuUGF0aC5Qb3MaIQoDUG9zEg0KBWluZGV4GAEgASgDEgsKA2tleRgCIAEoCSKpAQoES2luZBIPCgtVTlNQRUNJRklFRBAAEggKBEVWQUwQChIKCgZTQ0FMQVIQCxIHCgNSRUYQDBIHCgNPQkoQDRIHCgNBUlIQDhIICgRKU09OEA8SCAoESVRFUhAQEggKBEVMRU0QERIICgRDQUxMEBISCQoFQ0FTRVMQExIMCghPUF9VTkFSWRAUEg0KCU9QX0JJTkFSWRAVEg8KC09QX1ZBUklBRElDEBYimgEKBEV2YWwSHQoEZXZhbBgBIAEoCzIPLmV4cHJtbC52MS5FeHByEikKBXdoZXJlGAIgAygLMhouZXhwcm1sLnYxLkV2YWwuRGVmaW5pdGlvbhpICgpEZWZpbml0aW9uEg0KBWlkZW50GAEgASgJEgwKBGFyZ3MYAiADKAkSHQoEYm9keRgDIAEoCzIPLmV4cHJtbC52MS5FeHByIioKBlNjYWxhchIgCgZzY2FsYXIYASABKAsyEC5leHBybWwudjEuVmFsdWUiFAoDUmVmEg0KBWlkZW50GAEgASgJImgKA09iahIkCgNvYmoYASADKAsyFy5leHBybWwudjEuT2JqLk9iakVudHJ5GjsKCE9iakVudHJ5EgsKA2tleRgBIAEoCRIeCgV2YWx1ZRgCIAEoCzIPLmV4cHJtbC52MS5FeHByOgI4ASIjCgNBcnISHAoDYXJyGAEgAygLMg8uZXhwcm1sLnYxLkV4cHIiJgoESnNvbhIeCgRqc29uGAEgASgLMhAuZXhwcm1sLnYxLlZhbHVlIoUBCgRJdGVyEhEKCXBvc19pZGVudBgBIAEoCRISCgplbGVtX2lkZW50GAIgASgJEhwKA2NvbBgDIAEoCzIPLmV4cHJtbC52MS5FeHByEhsKAmRvGAQgASgLMg8uZXhwcm1sLnYxLkV4cHISGwoCaWYYBSABKAsyDy5leHBybWwudjEuRXhwciJDCgRFbGVtEhwKA2dldBgBIAEoCzIPLmV4cHJtbC52MS5FeHByEh0KBGZyb20YAiABKAsyDy5leHBybWwudjEuRXhwciJ8CgRDYWxsEg0KBWlkZW50GAEgASgJEicKBGFyZ3MYAiADKAsyGS5leHBybWwudjEuQ2FsbC5BcmdzRW50cnkaPAoJQXJnc0VudHJ5EgsKA2tleRgBIAEoCRIeCgV2YWx1ZRgCIAEoCzIPLmV4cHJtbC52MS5FeHByOgI4ASKtAQoFQ2FzZXMSJAoFY2FzZXMYASADKAsyFS5leHBybWwudjEuQ2FzZXMuQ2FzZRp+CgRDYXNlEhQKDGlzX290aGVyd2lzZRgBIAEoCBIdCgR3aGVuGAIgASgLMg8uZXhwcm1sLnYxLkV4cHISHQoEdGhlbhgDIAEoCzIPLmV4cHJtbC52MS5FeHByEiIKCW90aGVyd2lzZRgEIAEoCzIPLmV4cHJtbC52MS5FeHByIqEBCgdPcFVuYXJ5EiEKAm9wGAEgASgOMhUuZXhwcm1sLnYxLk9wVW5hcnkuT3ASIAoHb3BlcmFuZBgCIAEoCzIPLmV4cHJtbC52MS5FeHByIlEKAk9wEg8KC1VOU1BFQ0lGSUVEEAASBwoDTEVOEAESBwoDTk9UEAISCAoERkxBVBADEgkKBUZMT09SEAQSCAoEQ0VJTBAFEgkKBUFCT1JUEAYiyQEKCE9wQmluYXJ5EiIKAm9wGAEgASgOMhYuZXhwcm1sLnYxLk9wQmluYXJ5Lk9wEh0KBGxlZnQYAiABKAsyDy5leHBybWwudjEuRXhwchIeCgVyaWdodBgDIAEoCzIPLmV4cHJtbC52MS5FeHByIloKAk9wEg8KC1VOU1BFQ0lGSUVEEAASBwoDU1VCEAESBwoDRElWEAISBgoCRVEQAxIHCgNORVEQBBIGCgJMVBAFEgcKA0xURRAGEgYKAkdUEAcSBwoDR1RFEAgitQEKCk9wVmFyaWFkaWMSJAoCb3AYASABKA4yGC5leHBybWwudjEuT3BWYXJpYWRpYy5PcBIhCghvcGVyYW5kcxgCIAMoCzIPLmV4cHJtbC52MS5FeHByIl4KAk9wEg8KC1VOU1BFQ0lGSUVEEAASBwoDQUREEAESBwoDTVVMEAISBwoDQU5EEAMSBgoCT1IQBBIHCgNDQVQQBRIHCgNNSU4QBhIHCgNNQVgQBxIJCgVNRVJHRRAIQl8KDWNvbS5leHBybWwudjFCCUV4cHJQcm90b1ABogIDRVhYqgIJRXhwcm1sLlYxygIJRXhwcm1sXFYx4gIVRXhwcm1sXFYxXEdQQk1ldGFkYXRh6gIKRXhwcm1sOjpWMWIGcHJvdG8z", [value_pb_js_1.file_exprml_v1_value]);
/**
 * Describes the message exprml.v1.Expr.
 * Use `create(ExprSchema)` to create a new message.
 */
exports.ExprSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 0);
/**
 * Describes the message exprml.v1.Expr.Path.
 * Use `create(Expr_PathSchema)` to create a new message.
 */
exports.Expr_PathSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 0, 0);
/**
 * Describes the message exprml.v1.Expr.Path.Pos.
 * Use `create(Expr_Path_PosSchema)` to create a new message.
 */
exports.Expr_Path_PosSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 0, 0, 0);
/**
 * Kind is the kind of the Node.
 *
 * @generated from enum exprml.v1.Expr.Kind
 */
var Expr_Kind;
(function (Expr_Kind) {
    /**
     * Unspecified.
     *
     * @generated from enum value: UNSPECIFIED = 0;
     */
    Expr_Kind[Expr_Kind["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Eval kind.
     *
     * @generated from enum value: EVAL = 10;
     */
    Expr_Kind[Expr_Kind["EVAL"] = 10] = "EVAL";
    /**
     * Scalar kind.
     *
     * @generated from enum value: SCALAR = 11;
     */
    Expr_Kind[Expr_Kind["SCALAR"] = 11] = "SCALAR";
    /**
     * Ref kind.
     *
     * @generated from enum value: REF = 12;
     */
    Expr_Kind[Expr_Kind["REF"] = 12] = "REF";
    /**
     * Obj kind.
     *
     * @generated from enum value: OBJ = 13;
     */
    Expr_Kind[Expr_Kind["OBJ"] = 13] = "OBJ";
    /**
     * Arr kind.
     *
     * @generated from enum value: ARR = 14;
     */
    Expr_Kind[Expr_Kind["ARR"] = 14] = "ARR";
    /**
     * Json kind.
     *
     * @generated from enum value: JSON = 15;
     */
    Expr_Kind[Expr_Kind["JSON"] = 15] = "JSON";
    /**
     * Iter kind.
     *
     * @generated from enum value: ITER = 16;
     */
    Expr_Kind[Expr_Kind["ITER"] = 16] = "ITER";
    /**
     * Elem kind.
     *
     * @generated from enum value: ELEM = 17;
     */
    Expr_Kind[Expr_Kind["ELEM"] = 17] = "ELEM";
    /**
     * Call kind.
     *
     * @generated from enum value: CALL = 18;
     */
    Expr_Kind[Expr_Kind["CALL"] = 18] = "CALL";
    /**
     * Cases kind.
     *
     * @generated from enum value: CASES = 19;
     */
    Expr_Kind[Expr_Kind["CASES"] = 19] = "CASES";
    /**
     * OpUnary kind.
     *
     * @generated from enum value: OP_UNARY = 20;
     */
    Expr_Kind[Expr_Kind["OP_UNARY"] = 20] = "OP_UNARY";
    /**
     * OpBinary kind.
     *
     * @generated from enum value: OP_BINARY = 21;
     */
    Expr_Kind[Expr_Kind["OP_BINARY"] = 21] = "OP_BINARY";
    /**
     * OpVariadic kind.
     *
     * @generated from enum value: OP_VARIADIC = 22;
     */
    Expr_Kind[Expr_Kind["OP_VARIADIC"] = 22] = "OP_VARIADIC";
})(Expr_Kind || (exports.Expr_Kind = Expr_Kind = {}));
/**
 * Describes the enum exprml.v1.Expr.Kind.
 */
exports.Expr_KindSchema = (0, codegenv1_1.enumDesc)(exports.file_exprml_v1_expr, 0, 0);
/**
 * Describes the message exprml.v1.Eval.
 * Use `create(EvalSchema)` to create a new message.
 */
exports.EvalSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 1);
/**
 * Describes the message exprml.v1.Eval.Definition.
 * Use `create(Eval_DefinitionSchema)` to create a new message.
 */
exports.Eval_DefinitionSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 1, 0);
/**
 * Describes the message exprml.v1.Scalar.
 * Use `create(ScalarSchema)` to create a new message.
 */
exports.ScalarSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 2);
/**
 * Describes the message exprml.v1.Ref.
 * Use `create(RefSchema)` to create a new message.
 */
exports.RefSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 3);
/**
 * Describes the message exprml.v1.Obj.
 * Use `create(ObjSchema)` to create a new message.
 */
exports.ObjSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 4);
/**
 * Describes the message exprml.v1.Arr.
 * Use `create(ArrSchema)` to create a new message.
 */
exports.ArrSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 5);
/**
 * Describes the message exprml.v1.Json.
 * Use `create(JsonSchema)` to create a new message.
 */
exports.JsonSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 6);
/**
 * Describes the message exprml.v1.Iter.
 * Use `create(IterSchema)` to create a new message.
 */
exports.IterSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 7);
/**
 * Describes the message exprml.v1.Elem.
 * Use `create(ElemSchema)` to create a new message.
 */
exports.ElemSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 8);
/**
 * Describes the message exprml.v1.Call.
 * Use `create(CallSchema)` to create a new message.
 */
exports.CallSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 9);
/**
 * Describes the message exprml.v1.Cases.
 * Use `create(CasesSchema)` to create a new message.
 */
exports.CasesSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 10);
/**
 * Describes the message exprml.v1.Cases.Case.
 * Use `create(Cases_CaseSchema)` to create a new message.
 */
exports.Cases_CaseSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 10, 0);
/**
 * Describes the message exprml.v1.OpUnary.
 * Use `create(OpUnarySchema)` to create a new message.
 */
exports.OpUnarySchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 11);
/**
 * Op is a operator.
 *
 * @generated from enum exprml.v1.OpUnary.Op
 */
var OpUnary_Op;
(function (OpUnary_Op) {
    /**
     * Unspecified.
     *
     * @generated from enum value: UNSPECIFIED = 0;
     */
    OpUnary_Op[OpUnary_Op["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Len operator.
     *
     * @generated from enum value: LEN = 1;
     */
    OpUnary_Op[OpUnary_Op["LEN"] = 1] = "LEN";
    /**
     * Not operator.
     *
     * @generated from enum value: NOT = 2;
     */
    OpUnary_Op[OpUnary_Op["NOT"] = 2] = "NOT";
    /**
     * Flat operator.
     *
     * @generated from enum value: FLAT = 3;
     */
    OpUnary_Op[OpUnary_Op["FLAT"] = 3] = "FLAT";
    /**
     * Floor operator.
     *
     * @generated from enum value: FLOOR = 4;
     */
    OpUnary_Op[OpUnary_Op["FLOOR"] = 4] = "FLOOR";
    /**
     * Ceil operator.
     *
     * @generated from enum value: CEIL = 5;
     */
    OpUnary_Op[OpUnary_Op["CEIL"] = 5] = "CEIL";
    /**
     * Abort operator.
     *
     * @generated from enum value: ABORT = 6;
     */
    OpUnary_Op[OpUnary_Op["ABORT"] = 6] = "ABORT";
})(OpUnary_Op || (exports.OpUnary_Op = OpUnary_Op = {}));
/**
 * Describes the enum exprml.v1.OpUnary.Op.
 */
exports.OpUnary_OpSchema = (0, codegenv1_1.enumDesc)(exports.file_exprml_v1_expr, 11, 0);
/**
 * Describes the message exprml.v1.OpBinary.
 * Use `create(OpBinarySchema)` to create a new message.
 */
exports.OpBinarySchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 12);
/**
 * Op is a operator.
 *
 * @generated from enum exprml.v1.OpBinary.Op
 */
var OpBinary_Op;
(function (OpBinary_Op) {
    /**
     * Unspecified.
     *
     * @generated from enum value: UNSPECIFIED = 0;
     */
    OpBinary_Op[OpBinary_Op["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Sub operator.
     *
     * @generated from enum value: SUB = 1;
     */
    OpBinary_Op[OpBinary_Op["SUB"] = 1] = "SUB";
    /**
     * Div operator.
     *
     * @generated from enum value: DIV = 2;
     */
    OpBinary_Op[OpBinary_Op["DIV"] = 2] = "DIV";
    /**
     * Eq operator.
     *
     * @generated from enum value: EQ = 3;
     */
    OpBinary_Op[OpBinary_Op["EQ"] = 3] = "EQ";
    /**
     * Neq operator.
     *
     * @generated from enum value: NEQ = 4;
     */
    OpBinary_Op[OpBinary_Op["NEQ"] = 4] = "NEQ";
    /**
     * Lt operator.
     *
     * @generated from enum value: LT = 5;
     */
    OpBinary_Op[OpBinary_Op["LT"] = 5] = "LT";
    /**
     * Lte operator.
     *
     * @generated from enum value: LTE = 6;
     */
    OpBinary_Op[OpBinary_Op["LTE"] = 6] = "LTE";
    /**
     * Gt operator.
     *
     * @generated from enum value: GT = 7;
     */
    OpBinary_Op[OpBinary_Op["GT"] = 7] = "GT";
    /**
     * Gte operator.
     *
     * @generated from enum value: GTE = 8;
     */
    OpBinary_Op[OpBinary_Op["GTE"] = 8] = "GTE";
})(OpBinary_Op || (exports.OpBinary_Op = OpBinary_Op = {}));
/**
 * Describes the enum exprml.v1.OpBinary.Op.
 */
exports.OpBinary_OpSchema = (0, codegenv1_1.enumDesc)(exports.file_exprml_v1_expr, 12, 0);
/**
 * Describes the message exprml.v1.OpVariadic.
 * Use `create(OpVariadicSchema)` to create a new message.
 */
exports.OpVariadicSchema = (0, codegenv1_1.messageDesc)(exports.file_exprml_v1_expr, 13);
/**
 * Op is a operator.
 *
 * @generated from enum exprml.v1.OpVariadic.Op
 */
var OpVariadic_Op;
(function (OpVariadic_Op) {
    /**
     * Unspecified.
     *
     * @generated from enum value: UNSPECIFIED = 0;
     */
    OpVariadic_Op[OpVariadic_Op["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Add operator.
     *
     * @generated from enum value: ADD = 1;
     */
    OpVariadic_Op[OpVariadic_Op["ADD"] = 1] = "ADD";
    /**
     * Mul operator.
     *
     * @generated from enum value: MUL = 2;
     */
    OpVariadic_Op[OpVariadic_Op["MUL"] = 2] = "MUL";
    /**
     * And operator.
     *
     * @generated from enum value: AND = 3;
     */
    OpVariadic_Op[OpVariadic_Op["AND"] = 3] = "AND";
    /**
     * Or operator.
     *
     * @generated from enum value: OR = 4;
     */
    OpVariadic_Op[OpVariadic_Op["OR"] = 4] = "OR";
    /**
     * Cat operator.
     *
     * @generated from enum value: CAT = 5;
     */
    OpVariadic_Op[OpVariadic_Op["CAT"] = 5] = "CAT";
    /**
     * Min operator.
     *
     * @generated from enum value: MIN = 6;
     */
    OpVariadic_Op[OpVariadic_Op["MIN"] = 6] = "MIN";
    /**
     * Max operator.
     *
     * @generated from enum value: MAX = 7;
     */
    OpVariadic_Op[OpVariadic_Op["MAX"] = 7] = "MAX";
    /**
     * Merge operator.
     *
     * @generated from enum value: MERGE = 8;
     */
    OpVariadic_Op[OpVariadic_Op["MERGE"] = 8] = "MERGE";
})(OpVariadic_Op || (exports.OpVariadic_Op = OpVariadic_Op = {}));
/**
 * Describes the enum exprml.v1.OpVariadic.Op.
 */
exports.OpVariadic_OpSchema = (0, codegenv1_1.enumDesc)(exports.file_exprml_v1_expr, 13, 0);
