// @generated by protoc-gen-es v2.2.0 with parameter "target=ts,import_extension=js"
// @generated from file exprml/v1/encoder.proto (package exprml.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Value } from "./value_pb.js";
import { file_exprml_v1_value } from "./value_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file exprml/v1/encoder.proto.
 */
export const file_exprml_v1_encoder: GenFile = /*@__PURE__*/
  fileDesc("ChdleHBybWwvdjEvZW5jb2Rlci5wcm90bxIJZXhwcm1sLnYxInsKC0VuY29kZUlucHV0Ei0KBmZvcm1hdBgBIAEoDjIdLmV4cHJtbC52MS5FbmNvZGVJbnB1dC5Gb3JtYXQSHwoFdmFsdWUYAyABKAsyEC5leHBybWwudjEuVmFsdWUiHAoGRm9ybWF0EggKBEpTT04QABIICgRZQU1MEAEiRQoMRW5jb2RlT3V0cHV0EhAKCGlzX2Vycm9yGAEgASgIEhUKDWVycm9yX21lc3NhZ2UYAiABKAkSDAoEdGV4dBgDIAEoCTJGCgdFbmNvZGVyEjsKBkVuY29kZRIWLmV4cHJtbC52MS5FbmNvZGVJbnB1dBoXLmV4cHJtbC52MS5FbmNvZGVPdXRwdXQiAEJiCg1jb20uZXhwcm1sLnYxQgxFbmNvZGVyUHJvdG9QAaICA0VYWKoCCUV4cHJtbC5WMcoCCUV4cHJtbFxWMeICFUV4cHJtbFxWMVxHUEJNZXRhZGF0YeoCCkV4cHJtbDo6VjFiBnByb3RvMw", [file_exprml_v1_value]);

/**
 * EncodeInput is the input message for the Encode method.
 *
 * @generated from message exprml.v1.EncodeInput
 */
export type EncodeInput = Message<"exprml.v1.EncodeInput"> & {
  /**
   * Format of the output string.
   *
   * @generated from field: exprml.v1.EncodeInput.Format format = 1;
   */
  format: EncodeInput_Format;

  /**
   * JSON value to encode.
   *
   * @generated from field: exprml.v1.Value value = 3;
   */
  value?: Value;
};

/**
 * Describes the message exprml.v1.EncodeInput.
 * Use `create(EncodeInputSchema)` to create a new message.
 */
export const EncodeInputSchema: GenMessage<EncodeInput> = /*@__PURE__*/
  messageDesc(file_exprml_v1_encoder, 0);

/**
 * Format of the output string.
 *
 * @generated from enum exprml.v1.EncodeInput.Format
 */
export enum EncodeInput_Format {
  /**
   * JSON format.
   *
   * @generated from enum value: JSON = 0;
   */
  JSON = 0,

  /**
   * JSON-compatible YAML format.
   *
   * @generated from enum value: YAML = 1;
   */
  YAML = 1,
}

/**
 * Describes the enum exprml.v1.EncodeInput.Format.
 */
export const EncodeInput_FormatSchema: GenEnum<EncodeInput_Format> = /*@__PURE__*/
  enumDesc(file_exprml_v1_encoder, 0, 0);

/**
 * EncodeOutput is the output message for the Encode method.
 *
 * @generated from message exprml.v1.EncodeOutput
 */
export type EncodeOutput = Message<"exprml.v1.EncodeOutput"> & {
  /**
   * Whether an error occurred during encoding.
   *
   * @generated from field: bool is_error = 1;
   */
  isError: boolean;

  /**
   * Error message if is_error is true.
   *
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * Encoded string in JSON (or JSON-compatible YAML).
   *
   * @generated from field: string text = 3;
   */
  text: string;
};

/**
 * Describes the message exprml.v1.EncodeOutput.
 * Use `create(EncodeOutputSchema)` to create a new message.
 */
export const EncodeOutputSchema: GenMessage<EncodeOutput> = /*@__PURE__*/
  messageDesc(file_exprml_v1_encoder, 1);

/**
 * Encoder interface encodes a JSON value into a string in JSON (or JSON-compatible YAML).
 *
 * @generated from service exprml.v1.Encoder
 */
export const Encoder: GenService<{
  /**
   * Encode encodes a JSON value into a string in JSON (or JSON-compatible YAML).
   *
   * @generated from rpc exprml.v1.Encoder.Encode
   */
  encode: {
    methodKind: "unary";
    input: typeof EncodeInputSchema;
    output: typeof EncodeOutputSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_exprml_v1_encoder, 0);

